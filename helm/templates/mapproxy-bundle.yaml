{{- define "mapproxy-chart.mapproxy-bundle" }}
  {{- $fs := (include "common.fs.merged" .) | fromYaml }}
  {{- $s3 := (include "common.s3.merged" .) | fromYaml }}
  {{- $configmapName := include "configmap.fullname" . -}}
  {{- $cloudProviderDockerRegistryUrl := include "mapproxy.cloudProviderDockerRegistryUrl" . -}}
  {{- $cloudProviderImagePullSecretName := include "mapproxy.cloudProviderImagePullSecretName" . -}}
  {{- $sslSecretName := ternary .Values.authentication.ssl.externalSecretName (printf "%s%s" .Release.Name "-open-ssl") .Values.authentication.ssl.useExternal }}
  {{- $s3SecretName := ternary $s3.secretName (printf "%s%s" .Release.Name  "-s3-secret") (ne $s3.secretName "") }}
  replicas: {{ .replicaCount }}
  selector:
    matchLabels:
      app: {{ .chartName }}
      release: {{ .releaseName }}
      run: {{ .releaseName }}-{{ .chartName }}
      app.kubernetes.io/name: {{ include "mapproxy.name" . }}
      app.kubernetes.io/instance: {{ .releaseName }}
  template:
    metadata:
      labels:
        app: {{ .chartName }}
        release: {{ .releaseName }}
        run: {{ .releaseName }}-{{ .chartName }}
        app.kubernetes.io/name: {{ include "mapproxy.name" . }}
        app.kubernetes.io/instance: {{ .releaseName }}
      annotations:
        {{- if .Values.resetOnConfigChange }}
        checksum/configmap: {{
          include (print $.Template.BasePath "/mapproxy/mapproxy-configmap.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.podAnnotations }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
        {{- end }}
    spec:
    {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
    {{- end }}
      containers:
        ######################################################### MapProxy Deployment #########################################################
        {{- template "mapproxy-chart.mapproxy-container" (merge (dict "releaseName" .releaseName "chartName" .chartName "cloudProviderDockerRegistryUrl" $cloudProviderDockerRegistryUrl "s3SecretName" $s3SecretName "resources" .resources) .) }}
        ######################################################### uwsgi Deployment #########################################################
      volumes:  
        {{- if .Values.global.ca.secretName }}
        - name: root-ca
          secret:
            secretName: {{ .Values.global.ca.secretName }}
        {{- end }}                
        {{- if .Values.authentication.ssl.enabled }}
        - name: open-ssl
          secret:
            secretName: {{ $sslSecretName }}
        {{- end }}
        - name: start-script
          configMap:
            name: {{ $configmapName }}
            items:
            - key: "START_SCRIPT"
              path: "start.sh"
        - name: mapproxy-config
          configMap:
            name: {{ $configmapName }}
            items:
            - key: "MAPPROXY_YAML"
              path: "mapproxy.yaml"
        - name: uwsgi-config
          configMap:
            name: {{ $configmapName }}
            items:
            - key: "LOG_INI"
              path: "log.ini"
        {{- if $fs.internalPvc.enabled }}
        - name: sources-storage
          persistentVolumeClaim:
            claimName: {{ $fs.internalPvc.name }}
        {{- end }}
{{- end }}
